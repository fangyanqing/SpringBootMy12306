### 设置###
#以properties后缀结尾的文件，称为属性配置文件
#在属性配置文件中，每个配置会编写为一行
#如果需要编写注释，使用井号#开头，即#可以注释一行代码，使当行代码失效，与java的单行注释作用一致
#java编程api提供了专门用于读取属性配置文件的类:   java.util.Properties;

#这里配置log4j的根日志器:  log4j.rootLogger
#log4j.rootLogger = debug - 配置日志器的输出级别 ，  stdout,D,E    --配输出目的
# debug  info  warn error  
log4j.rootLogger=debug,stdout
 
#以下是一个输出源的输出目的，输出格式，输出内容的配置
### 输出信息到控制抬 ###
log4j.appender.stdout = org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target = System.out
log4j.appender.stdout.layout = org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern = [%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n
 
### 输出DEBUG 级别以上的日志到=E://logs/log.log ###
#当文件达到一定大小时，自动生成新的文件
log4j.appender.D = org.apache.log4j.RollingFileAppender
log4j.appender.D.File = ./logs/log.log
#  1024B  ， 100KB  ，5MB
log4j.appender.D.MaxFileSize=100KB
log4j.appender.D.MaxBackupIndex=1
log4j.appender.D.Append = true
#log4j.appender.D.Threshold = DEBUG 
log4j.appender.D.layout = org.apache.log4j.PatternLayout
log4j.appender.D.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n
 
### 输出ERROR 级别以上的日志到=E://logs/error.log ###
#每天生成一个新的日志文件
log4j.appender.E = org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File =./logs/error.log 
log4j.appender.E.Append = true
#log4j.appender.E.Threshold = ERROR 
log4j.appender.E.layout = org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n